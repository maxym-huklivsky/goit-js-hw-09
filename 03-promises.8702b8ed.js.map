{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEaC,SAASC,cAAc,QAE/BC,iBAAiB,UAEtB,SAA0BC,G,kBAUtB,IAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,SAACC,EAAKC,GAChCC,YAAW,WACLN,GACFI,EAAI,CAAEG,SAAUC,EAAGC,MAAOC,IAC1BA,GAAgBC,OAAOC,KAEvBP,EAAI,CAAEE,SAAUC,EAAGC,MAAOC,IAC1BA,GAAgBC,OAAOC,G,GAExBC,E,IAIFC,MAAK,SAAAC,G,IAAGR,EAAQQ,EAARR,SAAUE,EAAKM,EAALN,MACjBO,EAAAtB,GAASuB,OAAOC,QACd,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANV,EAAM,M,IAGjDW,OAAM,SAAAL,G,IAAGR,EAAQQ,EAARR,SAAUE,EAAKM,EAALN,MAClBO,EAAAtB,GAASuB,OAAOI,QACd,sBAAqCF,OAAfZ,EAAS,QAAYY,OAANV,EAAM,M,IAIjDI,GAA0BF,OAAOC,E,EAlCnCb,EAAEuB,iBAQF,IANA,IAAMC,EAAWxB,EAAEyB,cAAcC,SAC3Bb,EAAOW,EAASX,KAAKc,MACrBC,EAAaJ,EAASd,MAAMiB,MAC9Bb,EAAyBF,OAAOgB,GAChCjB,EAAeC,OAAOgB,GAEjBC,EAAI,EAAGA,GAAKL,EAASM,OAAOH,MAAOE,IAAGE,EAAAF,GA6B/C7B,EAAEyB,cAAcO,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', generatePromises);\n\nfunction generatePromises(e) {\n  e.preventDefault();\n\n  const formElms = e.currentTarget.elements;\n  const step = formElms.step.value;\n  const firstDelay = formElms.delay.value;\n  let currentDelayForTimeOut = Number(firstDelay);\n  let currentDelay = Number(firstDelay);\n\n  for (let i = 1; i <= formElms.amount.value; i++) {\n    const shouldResolve = Math.random() > 0.3;\n    const promise = new Promise((res, rej) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          res({ position: i, delay: currentDelay });\n          currentDelay += Number(step);\n        } else {\n          rej({ position: i, delay: currentDelay });\n          currentDelay += Number(step);\n        }\n      }, currentDelayForTimeOut);\n    });\n\n    promise\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    currentDelayForTimeOut += Number(step);\n  }\n\n  e.currentTarget.reset();\n}\n"],"names":["$iU1Pc","parcelRequire","document","querySelector","addEventListener","e","shouldResolve","Math","random","Promise","res","rej","setTimeout","position","i","delay","currentDelay","Number","step","currentDelayForTimeOut","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","preventDefault","formElms","currentTarget","elements","value","firstDelay","i1","amount","_loop","reset"],"version":3,"file":"03-promises.8702b8ed.js.map"}