{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEaC,SAASC,cAAc,QAE/BC,iBAAiB,UAEtB,SAA0BC,GACxBA,EAAEC,iBAEF,MAAMC,EAAWF,EAAEG,cAAcC,SAC3BC,EAAOH,EAASG,KAAKC,MACrBC,EAAaL,EAASM,MAAMF,MAClC,IAAIG,EAAyBC,OAAOH,GAChCI,EAAeD,OAAOH,GAE1B,IAAK,IAAIK,EAAI,EAAGA,GAAKV,EAASW,OAAOP,MAAOM,IAAK,CAC/C,MAAME,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,CAACC,EAAKC,KAChCC,YAAW,KACLN,GACFI,EAAI,CAAEG,SAAUT,EAAGJ,MAAOG,IAC1BA,GAAgBD,OAAOL,KAEvBc,EAAI,CAAEE,SAAUT,EAAGJ,MAAOG,IAC1BA,GAAgBD,OAAOL,G,GAExBI,EAAuB,IAIzBa,MAAK,EAACD,SAAEA,EAAQb,MAAEA,MACjBe,EAAA5B,GAAS6B,OAAOC,QACd,uBAAqBJ,QAAiBb,MAAU,IAGnDkB,OAAM,EAACL,SAAEA,EAAQb,MAAEA,MAClBe,EAAA5B,GAAS6B,OAAOG,QACd,sBAAoBN,QAAeb,MAAU,IAInDC,GAA0BC,OAAOL,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', generatePromises);\n\nfunction generatePromises(e) {\n  e.preventDefault();\n\n  const formElms = e.currentTarget.elements;\n  const step = formElms.step.value;\n  const firstDelay = formElms.delay.value;\n  let currentDelayForTimeOut = Number(firstDelay);\n  let currentDelay = Number(firstDelay);\n\n  for (let i = 1; i <= formElms.amount.value; i++) {\n    const shouldResolve = Math.random() > 0.3;\n    const promise = new Promise((res, rej) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          res({ position: i, delay: currentDelay });\n          currentDelay += Number(step);\n        } else {\n          rej({ position: i, delay: currentDelay });\n          currentDelay += Number(step);\n        }\n      }, currentDelayForTimeOut);\n    });\n\n    promise\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    currentDelayForTimeOut += Number(step);\n  }\n}\n"],"names":["$eWCmQ","parcelRequire","document","querySelector","addEventListener","e","preventDefault","formElms","currentTarget","elements","step","value","firstDelay","delay","currentDelayForTimeOut","Number","currentDelay","i","amount","shouldResolve","Math","random","Promise","res","rej","setTimeout","position","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.107de4ed.js.map"}